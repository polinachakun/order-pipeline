server:
  port: 8084

#spring:
#  docker:
#    compose:
#      enabled: false

# Camunda Cloud Configuration
camunda:
  client:
    optimize:
      base-url: https://lhr-1.optimize.camunda.io/70966460-4199-4643-a14f-64b0913ba8b7

    mode: saas

    cluster-id: 70966460-4199-4643-a14f-64b0913ba8b7
    region: lhr-1

    auth:
      client-id: jV_WrZ.Fk0xV4ijKOfGgTW7g59yTb8.Z
      client-secret: zPQYDeTnTPHkDKfdu9EP_rAfCKKr1jrFp34mbu1hu1k0vaPoRNC8Kp4C4uAHUYSg

    zeebe:
      base-url: https://70966460-4199-4643-a14f-64b0913ba8b7.lhr-1.zeebe.camunda.io:443
#      gateway-url: localhost:26500

      # Operate API configuration
    operate:
      enabled: true
      base-url: https://lhr-1.operate.camunda.io/70966460-4199-4643-a14f-64b0913ba8b7

    # Tasklist API configuration
    tasklist:
      enabled: true
      base-url: https://lhr-1.tasklist.camunda.io/70966460-4199-4643-a14f-64b0913ba8b7

# custom configuration via Configuration files
kafka:
  general:
    bootstrap-servers: localhost:9092

  orders:
    topic: newOrdersTopic
    group-id: primaryGroup

  ordersStatusUpdate:
    topic: ordersStatusUpdateTopic
    group-id: primaryGroup

  factory:
    topic: stockAddedTopic
    group-id: primaryGroup
    camunda-group-id: camunda-group

  itemRequest:
    topic: itemRequestTopic
    group-id: primaryGroup


delivery:
  service:
    url: http://localhost:8083/delivery
#
#logging:
#  level:
#    com.example.warehouseservice: INFO

logging:
  level:
    io.camunda.zeebe.client.job.worker: ERROR
    io.grpc.stub.ClientCalls: ERROR